%% == Erlang Compiler ==

{minimum_otp_vsn, "20.0"}.

{erl_opts,
 [debug_info,
  warnings_as_errors,
  warn_unused_vars,
  ewarn_export_all,
  warn_shadow_vars,
  warn_unused_import,
  warn_unused_function,
  warn_bif_clash,
  warn_unused_record,
  warn_deprecated_function,
  warn_obsolete_guard,
  strict_validation,
  warn_export_vars,
  warn_exported_vars,
  warn_untyped_record]}.

%% == Dependencies ==

{deps,
 [{cross_db, {git, "https://github.com/hasithadkr7/cross_db.git", {tag, "v0.2.1"}}},
  %%  {mysql, {git, "https://github.com/mysql-otp/mysql-otp", {tag, "1.3.1"}}},
  {mysql, "1.8.0"},
  %%  {poolboy, "1.5.1"},
  {poolboy, "1.5.2"}]}.

%% == Profiles ==

%%{profiles,
%% [{test,
%%   [{deps,
%%     [{katana, "1.0.0"}, {katana_test, "1.0.1"}, {mixer, "1.2.0", {pkg, inaka_mixer}}]},
%%    {cover_excl_mods, []}]}]}.

{profiles,
 [{test,
   [{src_dirs, ["src", "test", "test/model", "test/support"]},
    {erl_first_files, ["src/xdb_adapter.erl", "test/support/xdb_test_adapter.erl"]},
    {deps, [{katana, "1.0.0"}, {katana_test, "1.0.1"}, {mixer, "1.2.0", {pkg, inaka_mixer}}]},
    {cover_excl_mods, []}]}]}.

%% == Cover ==

{cover_enabled, true}.

{cover_opts, [verbose]}.

%% == Common Test ==

{ct_compile_opts,
 [debug_info,
  warnings_as_errors,
  warn_unused_vars,
  ewarn_export_all,
  warn_shadow_vars,
  warn_unused_import,
  warn_unused_function,
  warn_bif_clash,
  warn_unused_record,
  warn_deprecated_function,
  warn_obsolete_guard,
  strict_validation,
  warn_export_vars,
  warn_exported_vars,
  warn_untyped_record]}.

{ct_opts, [{sys_config, ["config/test.config"]}]}.

%% == EDoc ==

{edoc_opts, []}.

%% == Dialyzer ==

{dialyzer,
 [{warnings, [no_return, unmatched_returns, error_handling, unknown]},
  {plt_apps, top_level_deps},
  {plt_extra_apps, []},
  {plt_location, local},
  {plt_prefix, "cross_db_mysql"},
  {base_plt_location, "."},
  {base_plt_prefix, "cross_db_mysql"}]}.

%% == Shell ==

{shell, [{apps, [cross_db_mysql]}, {config, ["config/test.config"]}]}.

%% == Project Plugins ==

{project_plugins, [rebar3_format, rebar3_lint, rebar3_hank]}.

%% == Alias ==

{alias,
 [{test,
   [compile, {format, "--verify"}, lint, hank, dialyzer, {ct, "--verbose"}, cover, edoc]}]}.
